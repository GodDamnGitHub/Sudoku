{"ast":null,"code":"var _jsxFileName = \"/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/HighScoresScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef, createRef, setState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction HighScoresScreen() {\n  var _this = this;\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@sudoku_bes'));\n\n          case 3:\n            jsonValue = _context.sent;\n            alert(jsonValue);\n            data = null;\n\n            if (jsonValue != null) {\n              data = JSON.parse(jsonValue);\n              console.log('just set Info, Correct and Answered');\n            } else {\n              console.log('just read a null value from Storage');\n              alert(\"!\");\n            }\n\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error in getData \");\n            console.dir(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: [{\n      key: 'Devin'\n    }, {\n      key: 'Dan'\n    }, {\n      key: 'Dominic'\n    }, {\n      key: 'Jackson'\n    }, {\n      key: 'James'\n    }, {\n      key: 'Joel'\n    }, {\n      key: 'John'\n    }, {\n      key: 'Jillian'\n    }, {\n      key: 'Jimmy'\n    }, {\n      key: 'Julie'\n    }],\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Text, {\n        style: styles.item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }\n      }, item.key);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default HighScoresScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/HighScoresScreen.js"],"names":["React","useState","useEffect","useRef","createRef","setState","NavigationContainer","createNativeStackNavigator","AsyncStorage","HighScoresScreen","getData","getItem","jsonValue","alert","data","JSON","parse","console","log","dir","styles","container","key","item","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,SAA7C,EAAwDC,QAAxD,QAAwE,OAAxE;;;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAGA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEYF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAFZ;;AAAA;AAENC,YAAAA,SAFM;AAGZC,YAAAA,KAAK,CAACD,SAAD,CAAL;AACIE,YAAAA,IAJQ,GAID,IAJC;;AAKZ,gBAAIF,SAAS,IAAE,IAAf,EAAqB;AACnBE,cAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP;AAEAK,cAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,aAJD,MAIO;AACLD,cAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,cAAAA,KAAK,CAAC,GAAD,CAAL;AACD;;AAZW;AAAA;;AAAA;AAAA;AAAA;AAcZI,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,YAAAA,OAAO,CAACE,GAAR;;AAfY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAoBAjB,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;AAIA,SAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,CACJ;AAACC,MAAAA,GAAG,EAAE;AAAN,KADI,EAEJ;AAACA,MAAAA,GAAG,EAAE;AAAN,KAFI,EAGJ;AAACA,MAAAA,GAAG,EAAE;AAAN,KAHI,EAIJ;AAACA,MAAAA,GAAG,EAAE;AAAN,KAJI,EAKJ;AAACA,MAAAA,GAAG,EAAE;AAAN,KALI,EAMJ;AAACA,MAAAA,GAAG,EAAE;AAAN,KANI,EAOJ;AAACA,MAAAA,GAAG,EAAE;AAAN,KAPI,EAQJ;AAACA,MAAAA,GAAG,EAAE;AAAN,KARI,EASJ;AAACA,MAAAA,GAAG,EAAE;AAAN,KATI,EAUJ;AAACA,MAAAA,GAAG,EAAE;AAAN,KAVI,CADR;AAaE,IAAA,UAAU,EAAE;AAAA,UAAEC,IAAF,QAAEA,IAAF;AAAA,aAAY,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BA,IAAI,CAACD,GAAhC,CAAZ;AAAA,KAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF;AAqBD;;AAED,eAAeb,gBAAf;AAEA,IAAMW,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, useRef, createRef, setState } from \"react\"\nimport { Button, View, Text, StyleSheet, ImageBackground, Image, FlatList } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\n\nfunction HighScoresScreen() {\n  const getData = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem('@sudoku_bes');\n      alert(jsonValue);\n      let data = null\n      if (jsonValue!=null) {\n        data = JSON.parse(jsonValue)\n        //alert(jsonValue);\n        console.log('just set Info, Correct and Answered')\n      } else {\n        console.log('just read a null value from Storage')\n        alert(\"!\");\n      }\n    } catch(e) {\n      console.log(\"error in getData \")\n      console.dir(e)\n      // error reading value\n    }\n  }\n\n  useEffect(() => {\n    getData()\n  },[])\n\n  return (\n\n    \n    <View style={styles.container}>\n      <FlatList\n        data={[\n          {key: 'Devin'},\n          {key: 'Dan'},\n          {key: 'Dominic'},\n          {key: 'Jackson'},\n          {key: 'James'},\n          {key: 'Joel'},\n          {key: 'John'},\n          {key: 'Jillian'},\n          {key: 'Jimmy'},\n          {key: 'Julie'},\n        ]}\n        renderItem={({item}) => <Text style={styles.item}>{item.key}</Text>}\n      />\n    </View>\n  );\n}\n\nexport default HighScoresScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n});\n\n\n"]},"metadata":{},"sourceType":"module"}