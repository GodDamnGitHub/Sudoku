{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/EasyModeScreen.js\";\nimport React, { useState, useEffect, useRef, createRef, setState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Grid from \"./Grid.js\";\nimport * as easyData from \"../data/easyData.json\";\nimport Axios from 'axios';\nvar url = \"https://secure-earth-67171.herokuapp.com\";\n\nfunction EasyModeScreen() {\n  var rand = 0 + Math.floor(Math.random() * (9 - 0 + 1));\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  useEffect(function () {\n    Axios.get(url + '/geteasy').then(function (response) {\n      var sudokuStr = response.data;\n      var count = 0;\n\n      for (var i = 0; i < 9; i++) {\n        var line = [];\n\n        for (var j = 0; j < 9; j++) {\n          var cur = sudokuStr.charAt(count);\n          count++;\n\n          if (cur == \".\") {\n            line.push(\"\");\n          } else {\n            line.push(cur);\n          }\n        }\n\n        data.push(line);\n      }\n\n      alert(data);\n      setIsLoading(false);\n    });\n  }, []);\n  var vals = easyData.sudokuList[0];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isInput = _useState6[0],\n      setIsInput = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userName = _useState8[0],\n      setUserName = _useState8[1];\n\n  if (isLoading) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, React.createElement(Grid, {\n      vals: data,\n      userName: userName,\n      mode: \"hard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nexport default EasyModeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/EasyModeScreen.js"],"names":["React","useState","useEffect","useRef","createRef","setState","NavigationContainer","createNativeStackNavigator","Grid","easyData","Axios","url","EasyModeScreen","rand","Math","floor","random","data","setData","isLoading","setIsLoading","get","then","response","sudokuStr","count","i","line","j","cur","charAt","push","alert","vals","sudokuList","isInput","setIsInput","userName","setUserName","styles","container","StyleSheet","create","flex","alignItems","justifyContent","input","height","margin","borderWidth","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, createRef, setState } from \"react\"\nimport { Button, View, Text, StyleSheet, ImageBackground, Image, TextInput } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Grid from './Grid.js';\nimport * as easyData from '../data/easyData.json';\nimport Axios from 'axios'\n\n\nconst url = \"https://secure-earth-67171.herokuapp.com\";\n\n\n\nfunction EasyModeScreen() {\n  var rand = 0 + Math.floor(Math.random() * (9 - 0 + 1));\n  const[data, setData] = useState([]);\n\n  const[isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    Axios.get(url+'/geteasy')\n    .then((response) => {\n      let sudokuStr = response.data;\n      var count = 0;\n      for (var i = 0; i < 9; i++) {\n        let line = [];\n        for (var j = 0; j < 9; j++) {\n          let cur = sudokuStr.charAt(count);\n          count++;\n          if (cur == \".\") {\n            line.push(\"\");\n          } else {\n            line.push(cur);\n          }\n        }\n        //alert(line);\n        data.push(line);\n      }\n      alert(data);\n      setIsLoading(false);\n      //alert(data);\n    });\n  },[])\n\n\n\n  let vals = easyData.sudokuList[0];\n  const [isInput, setIsInput] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n\n  if (isLoading) {\n    return (\n      <View></View>\n    );\n  } else {\n    return (\n      <View style={styles.container}>\n        <Grid vals={data} userName={userName} mode=\"hard\"/>\n      </View>\n    );\n  }\n  \n\n}\n\n\nexport default EasyModeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n});\n\n\n"]},"metadata":{},"sourceType":"module"}