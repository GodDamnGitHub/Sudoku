{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/AboutScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport CloudRegistration from \"./CloudRegistration\";\nimport Markdown from 'react-native-markdown-renderer';\n\nfunction AboutScreen() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      file = _useState2[0],\n      setFile = _useState2[1];\n\n  var fetchLocalFile = function fetchLocalFile() {\n    var file;\n    return _regeneratorRuntime.async(function fetchLocalFile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            file = Expo.Asset.fromModule(require(\"../assets/README.md\"));\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(file.downloadAsync());\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(file.uri));\n\n          case 5:\n            file = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(file.text());\n\n          case 8:\n            file = _context.sent;\n            setFile(file);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchLocalFile();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Markdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, file));\n}\n\nexport default AboutScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  p1: {\n    flex: 2,\n    padding: 20,\n    borderWidth: 3\n  }\n});","map":{"version":3,"sources":["/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/AboutScreen.js"],"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","CloudRegistration","Markdown","AboutScreen","file","setFile","fetchLocalFile","Expo","Asset","fromModule","require","downloadAsync","fetch","uri","text","styles","container","StyleSheet","create","flex","alignItems","justifyContent","padding","p1","borderWidth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,iBAAP;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAGA,SAASC,WAAT,GAAuB;AAErB,kBAAuBN,QAAQ,EAA/B;AAAA;AAAA,MAAMO,IAAN;AAAA,MAAYC,OAAZ;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBF,YAAAA,IADiB,GACVG,IAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,OAAO,uBAA7B,CADU;AAAA;AAAA,6CAEfN,IAAI,CAACO,aAAL,EAFe;;AAAA;AAAA;AAAA,6CAGRC,KAAK,CAACR,IAAI,CAACS,GAAN,CAHG;;AAAA;AAGrBT,YAAAA,IAHqB;AAAA;AAAA,6CAIRA,IAAI,CAACU,IAAL,EAJQ;;AAAA;AAIrBV,YAAAA,IAJqB;AAMrBC,YAAAA,OAAO,CAACD,IAAD,CAAP;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AASAN,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,cAAc;AACf,GAFQ,EAEP,EAFO,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWZ,IAAX,CADF,CADF;AAKD;;AAED,eAAeD,WAAf;AAEA,IAAMY,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,OAAO,EAAE;AAJA,GADoB;AAO/BC,EAAAA,EAAE,EAAE;AACFJ,IAAAA,IAAI,EAAE,CADJ;AAEFG,IAAAA,OAAO,EAAE,EAFP;AAGFE,IAAAA,WAAW,EAAE;AAHX;AAP2B,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, View, Text, StyleSheet, ImageBackground, Image } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport CloudRegistration from './CloudRegistration';\nimport Markdown from 'react-native-markdown-renderer';\n\n\nfunction AboutScreen() {\n\n  const[file, setFile] = useState();\n\n  const fetchLocalFile = async () => {\n    let file = Expo.Asset.fromModule(require(\"../assets/README.md\"))\n    await file.downloadAsync() // Optional, saves file into cache\n    file = await fetch(file.uri)\n    file = await file.text()\n\n    setFile(file);\n  }\n\n  useEffect(() => {\n    fetchLocalFile();\n  },[])\n\n  return (\n    <View style={styles.container}>\n      <Markdown>{file}</Markdown>\n    </View>\n  );\n}\n\nexport default AboutScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  p1: {\n    flex: 2,\n    padding: 20,\n    borderWidth: 3\n  },\n});\n\n\n"]},"metadata":{},"sourceType":"module"}