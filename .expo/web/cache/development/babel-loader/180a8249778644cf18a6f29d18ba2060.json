{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/HardModeScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Axios from 'axios';\nimport { useValue } from \"./ValueContext\";\nimport appKey, { appURL } from \"../lib/appKey.js\";\n\nvar Item = function Item(_ref) {\n  var title = _ref.title,\n      author = _ref.author,\n      description = _ref.description,\n      id = _ref.id,\n      json = _ref.json;\n  return React.createElement(View, {\n    style: styles.item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, title.trim()), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, author.trim()), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \" \", description, \" \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \" json form: \", JSON.stringify(json), \" \"), React.createElement(Button, {\n    title: \"id=\" + JSON.stringify(id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }));\n};\n\nfunction HardModeScreen() {\n  var _this2 = this;\n\n  var userKey = '6192d30c0164100004e78941';\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      books = _useState4[0],\n      setBooks = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      author = _useState8[0],\n      setAuthor = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      description = _useState10[0],\n      setDescription = _useState10[1];\n\n  useEffect(function () {\n    getCloudData();\n  }, []);\n\n  var storeCloudData = function storeCloudData(value) {\n    var data, result;\n    return _regeneratorRuntime.async(function storeCloudData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('in storeCloudData, data=');\n            data = {\n              appKey: appKey,\n              userKey: userKey,\n              valueKey: '@books',\n              value: value\n            };\n            console.dir(data);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Axios.post(appURL + '/storeData', data));\n\n          case 5:\n            result = _context.sent;\n            console.log(\"result=\");\n            console.dir(result.data);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getCloudData = function getCloudData() {\n    var data, result, books;\n    return _regeneratorRuntime.async(function getCloudData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('in getCloudData data=');\n            data = {\n              appKey: appKey,\n              userKey: userKey,\n              valueKey: '@books'\n            };\n            console.dir(data);\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(Axios.post(appURL + '/getData', data));\n\n          case 5:\n            result = _context2.sent;\n            console.log(\"result=\");\n            console.dir(result);\n            books = result.data.map(function (x) {\n              return {\n                id: x._id,\n                book: JSON.parse(x.value)\n              };\n            });\n            console.log('books=');\n            console.dir(books);\n            setBooks(books);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var clearCloudData = function clearCloudData() {\n    var data, result;\n    return _regeneratorRuntime.async(function clearCloudData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log('in clearCloudData data=');\n            data = {\n              appKey: appKey,\n              userKey: userKey,\n              valueKey: '@books'\n            };\n            console.dir(data);\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(Axios.post(appURL + '/clearData', data));\n\n          case 5:\n            result = _context3.sent;\n            console.log(\"result=\");\n            console.dir(result);\n            setBooks([]);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderBook = function renderBook(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }\n    }, React.createElement(Item, {\n      title: item.book.title,\n      author: item.book.author,\n      description: item.book.description + JSON.stringify(item),\n      id: item.id,\n      json: item,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 32,\n      backgroundColor: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"books\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, \" userKey='\", userKey, \"' appKey='\", appKey, \"' appURL=\", appURL, \" \"), React.createElement(FlatList, {\n    data: books,\n    renderItem: renderBook,\n    keyExtractor: function keyExtractor(item, index) {\n      return item.title + item.author + index;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Add a book\"), React.createElement(TextInput, {\n    placeholder: \"title\",\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"author\",\n    onChangeText: function onChangeText(text) {\n      return setAuthor(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"description\",\n    onChangeText: function onChangeText(text) {\n      return setDescription(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"store book\",\n    color: \"pink\",\n    onPress: function onPress() {\n      var book = {\n        title: title,\n        author: author,\n        description: description\n      };\n      storeCloudData(book);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"get cloud data\",\n    color: \"lightgreen\",\n    onPress: function onPress() {\n      return getCloudData();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"clear cloud data\",\n    color: \"red\",\n    onPress: function onPress() {\n      return clearCloudData();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default HardModeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    flex: 4,\n    backgroundColor: '#f9c2ff',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  }\n});","map":{"version":3,"sources":["/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/HardModeScreen.js"],"names":["React","useState","useEffect","AsyncStorage","Axios","useValue","appKey","appURL","Item","title","author","description","id","json","styles","item","trim","JSON","stringify","HardModeScreen","userKey","data","setData","books","setBooks","setTitle","setAuthor","setDescription","getCloudData","storeCloudData","value","console","log","valueKey","dir","post","result","map","x","_id","book","parse","clearCloudData","renderBook","container","fontSize","backgroundColor","index","text","flexDirection","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","padding","marginVertical","marginHorizontal"],"mappings":"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","sourcesContent":["/*\n  Books with Context\n  This is a demo of an app which shows the users favorite books\n  This gets the appKey, appURL, and userKey from the Context\n*/\nimport React,{useState,useEffect} from 'react';\nimport { SafeAreaView, ScrollView, View, FlatList, StyleSheet, Text, TextInput, Button, StatusBar, Image } from 'react-native';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Axios from 'axios'\n\nimport {useValue} from './ValueContext';\nimport appKey,{appURL} from '../lib/appKey.js'\n\nconst Item = ({ title, author, description, id, json}) => (\n  <View style={styles.item}>\n    <Text style={styles.title}>{title.trim()}</Text>\n    <Text>{author.trim()}</Text>\n    <Text> {description} </Text>\n    <Text> json form: {JSON.stringify(json)} </Text>\n    <Button title={\"id=\"+JSON.stringify(id)} />\n  </View>\n);\n\nfunction HardModeScreen() {\n  /*const {currentValue,setCurrentValue} = useValue();\n  const appKey = currentValue.appKey\n  const appURL = currentValue.appURL\n  const userKey = currentValue.userKey*/\n  const userKey = '6192d30c0164100004e78941'\n  //console.log('currentValue=')\n  //console.dir(currentValue)\n\n  const [data,setData] = useState([])\n  const [books,setBooks] = useState([])\n  const [title,setTitle] = useState(\"\")\n  const [author,setAuthor] = useState(\"\")\n  const [description,setDescription] = useState(\"\")\n\n  useEffect(() => {\n    getCloudData()\n  },[])\n\n\n\n  const storeCloudData = async (value) => {\n    console.log('in storeCloudData, data=')\n    let data = {appKey:appKey,\n                userKey:userKey,\n                valueKey:'@books',\n                value:value}\n    console.dir(data)\n    let result =\n      await Axios.post(appURL+'/storeData',data)\n    console.log(`result=`)\n    console.dir(result.data)\n  }\n\n  const getCloudData = async () => {\n    console.log('in getCloudData data=')\n    let data = {appKey:appKey,\n                userKey:userKey,\n                valueKey:'@books'}\n    console.dir(data)\n\n    let result =\n      await Axios.post(appURL+'/getData',data)\n    console.log(`result=`)\n    console.dir(result)\n    const books =\n       result.data.map(\n          (x) => {return {id:x._id, book:JSON.parse(x.value)}})\n    console.log('books=')\n    console.dir(books)\n    setBooks(books)\n  }\n\n  const clearCloudData = async () => {\n    console.log('in clearCloudData data=')\n    let data = {appKey:appKey,\n                userKey:userKey,\n                valueKey:'@books'}\n    console.dir(data)\n\n    let result =\n      await Axios.post(appURL+'/clearData',data)\n    console.log(`result=`)\n    console.dir(result)\n    setBooks([])\n  }\n\n  const renderBook = ({ item }) => (\n    <View>\n      <Item\n          title={item.book.title}\n          author={item.book.author}\n          description={item.book.description + JSON.stringify(item)}\n          id = {item.id}\n          json={item}\n      />\n    </View>\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n     <ScrollView>\n      <Text style={{fontSize:32,\n                    backgroundColor:'red'}}>\n         books\n      </Text>\n      <Text> userKey='{userKey}' appKey='{appKey}' appURL={appURL} </Text>\n      <FlatList\n        data={books}\n        renderItem={renderBook}\n        keyExtractor={(item,index) => item.title+item.author+index}\n      />\n      <View>\n        <Text>Add a book</Text>\n        <TextInput placeholder=\"title\" onChangeText={(text) => setTitle(text)} />\n        <TextInput placeholder=\"author\" onChangeText={(text) => setAuthor(text)} />\n        <TextInput placeholder=\"description\" onChangeText={(text) => setDescription(text)} />\n        <View style={{flexDirection:'row'}}>\n          <Button title=\"store book\" color='pink' onPress={() =>{\n            const book = {title,author,description}\n            storeCloudData(book)\n          }} />\n          <Button title=\"get cloud data\" color='lightgreen' onPress={() => getCloudData()} />\n          <Button title=\"clear cloud data\" color='red' onPress={() => clearCloudData()} />\n        </View>\n      </View>\n     </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nexport default HardModeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    flex:4,\n    backgroundColor: '#f9c2ff',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 32,\n  },\n});\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}