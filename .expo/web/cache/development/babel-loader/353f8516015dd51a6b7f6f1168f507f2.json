{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/ValueContext.js\";\n\nimport React, { useState, useContext, createContext } from \"react\";\nvar ValueContext = createContext(null);\n\nvar ValueProvider = function ValueProvider(_ref) {\n  var value = _ref.value,\n      children = _ref.children;\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentValue = _useState2[0],\n      setCurrentValue = _useState2[1];\n\n  return React.createElement(ValueContext.Provider, {\n    value: {\n      currentValue: currentValue,\n      setCurrentValue: setCurrentValue\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default ValueProvider;\nexport var useValue = function useValue() {\n  return useContext(ValueContext);\n};","map":{"version":3,"sources":["/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/ValueContext.js"],"names":["React","useState","useContext","createContext","ValueContext","ValueProvider","value","children","currentValue","setCurrentValue","useValue"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,aAAtC,QAA2D,OAA3D;AAEA,IAAMC,YAAY,GAAGD,aAAa,CAAC,IAAD,CAAlC;;AAEA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,OAAuB;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAC3C,kBAAuCN,QAAQ,CAACK,KAAD,CAA/C;AAAA;AAAA,MAAOE,YAAP;AAAA,MAAoBC,eAApB;;AAEA,SACE,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AAACD,MAAAA,YAAY,EAAZA,YAAD;AAAcC,MAAAA,eAAe,EAAfA;AAAd,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGF,QAFH,CADF;AAMD,CATD;;AAWA,eAAeF,aAAf;AACA,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAMR,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAjB","sourcesContent":["import React, { useState, useContext, createContext } from \"react\";\n\nconst ValueContext = createContext(null)\n\nconst ValueProvider = ({value, children}) => {\n  const [currentValue,setCurrentValue] = useState(value);\n\n  return (\n    <ValueContext.Provider\n        value={{currentValue,setCurrentValue}} >\n      {children}\n    </ValueContext.Provider>\n   )\n}\n\nexport default ValueProvider\nexport const useValue = () => useContext(ValueContext)"]},"metadata":{},"sourceType":"module"}