{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/Grid.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef, createRef, setState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Constants from 'expo-constants';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Timer from \"./Timer\";\n\nvar Cell = function Cell(_ref) {\n  var id0 = _ref.id0,\n      id1 = _ref.id1,\n      id2 = _ref.id2,\n      id3 = _ref.id3,\n      vals = _ref.vals,\n      isRed = _ref.isRed,\n      update = _ref.update;\n  var inputRef = React.createRef();\n  var x = 3 * id0 + id2,\n      y = 3 * id1 + id3;\n  return React.createElement(View, {\n    style: isRed[x][y] ? styles.CellRed : styles.CellBlue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, vals[x][y] == \"\" ? React.createElement(TextInput, {\n    ref: inputRef,\n    style: {\n      height: 28,\n      width: 28,\n      fontSize: 22,\n      color: 'blue',\n      textAlign: 'center'\n    },\n    maxLength: 1,\n    onChangeText: function onChangeText(text) {\n      if (text > 0 && text <= 9 || text == \"\") {\n        update(x, y, text);\n      } else {\n        inputRef.current.clear();\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }) : React.createElement(Text, {\n    style: {\n      fontSize: 22\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, vals[3 * id0 + id2][3 * id1 + id3]));\n};\n\nvar ButtonCell = function ButtonCell(_ref2) {\n  var num = _ref2.num;\n  return React.createElement(View, {\n    style: styles.Circle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    color: \"#ff9933\",\n    title: num,\n    onPress: function onPress() {\n      alert(num);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar Row = function Row(_ref3) {\n  var id0 = _ref3.id0,\n      id1 = _ref3.id1,\n      id2 = _ref3.id2,\n      vals = _ref3.vals,\n      isRed = _ref3.isRed,\n      update = _ref3.update;\n  return React.createElement(View, {\n    style: styles.Row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(Cell, {\n    id0: id0,\n    id1: id1,\n    id2: id2,\n    id3: 0,\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(Cell, {\n    id0: id0,\n    id1: id1,\n    id2: id2,\n    id3: 1,\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(Cell, {\n    id0: id0,\n    id1: id1,\n    id2: id2,\n    id3: 2,\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar SmallGrid = function SmallGrid(_ref4) {\n  var id0 = _ref4.id0,\n      id1 = _ref4.id1,\n      vals = _ref4.vals,\n      isRed = _ref4.isRed,\n      update = _ref4.update;\n  return React.createElement(View, {\n    style: styles.smallGrid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(Row, {\n    id0: id0,\n    id1: id1,\n    id2: 0,\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(Row, {\n    id0: id0,\n    id1: id1,\n    id2: 1,\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(Row, {\n    id0: id0,\n    id1: id1,\n    id2: 2,\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar GridRow = function GridRow(_ref5) {\n  var id = _ref5.id,\n      vals = _ref5.vals,\n      isRed = _ref5.isRed,\n      update = _ref5.update;\n  return React.createElement(View, {\n    style: styles.gridRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(SmallGrid, {\n    id0: id,\n    id1: 0,\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), React.createElement(SmallGrid, {\n    id0: id,\n    id1: 1,\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), React.createElement(SmallGrid, {\n    id0: id,\n    id1: 2,\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar LargeGrid = function LargeGrid(_ref6) {\n  var vals = _ref6.vals,\n      isRed = _ref6.isRed,\n      update = _ref6.update;\n  return React.createElement(View, {\n    style: styles.largeGrid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, React.createElement(GridRow, {\n    id: 0,\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), React.createElement(GridRow, {\n    id: 1,\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), React.createElement(GridRow, {\n    id: 2,\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar Grid = function Grid(_ref7) {\n  var vals = _ref7.vals,\n      userName = _ref7.userName;\n\n  var storeData = function storeData(value) {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@sudoku_best'));\n\n          case 3:\n            jsonValue = _context.sent;\n\n            if (!(jsonValue == null)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@sudoku_best', JSON.stringify(value)));\n\n          case 7:\n            console.log('just stored ' + value);\n            _context.next = 15;\n            break;\n\n          case 10:\n            data = JSON.parse(jsonValue);\n\n            if (!(value.time <= data.time)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@sudoku_best', JSON.stringify(value)));\n\n          case 14:\n            console.log('just stored ' + jsonValue);\n\n          case 15:\n            _context.next = 21;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error in storeData \");\n            console.dir(_context.t0);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n\n  var clearAll = function clearAll() {\n    return _regeneratorRuntime.async(function clearAll$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.dir(_context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@sudoku_best'));\n\n          case 3:\n            jsonValue = _context3.sent;\n            data = null;\n\n            if (jsonValue != null) {\n              data = JSON.parse(jsonValue);\n              setBestPerson(data.userName);\n              setBestTime(data.time);\n              console.log('just set Info, Correct and Answered');\n            } else {\n              console.log('just read a null value from Storage');\n            }\n\n            _context3.next = 12;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"error in getData \");\n            console.dir(_context3.t0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var copy = new Array(9).fill(\"\").map(function () {\n    return new Array(9).fill(\"\");\n  });\n\n  for (var i = 0; i < 9; i++) {\n    for (var j = 0; j < 9; j++) {\n      copy[i][j] = vals[i][j];\n    }\n  }\n\n  var _useState = useState(copy),\n      _useState2 = _slicedToArray(_useState, 2),\n      userVals = _useState2[0],\n      setUserVals = _useState2[1];\n\n  var originRed = new Array(9).fill(0).map(function () {\n    return new Array(9).fill(0);\n  });\n\n  var _useState3 = useState(originRed),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRed = _useState4[0],\n      setIsRed = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      time = _useState6[0],\n      setTime = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isVisible = _useState8[0],\n      setIsVisible = _useState8[1];\n\n  var _useState9 = useState(\"Null\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      bestPerson = _useState10[0],\n      setBestPerson = _useState10[1];\n\n  var _useState11 = useState(\"NA\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      bestTime = _useState12[0],\n      setBestTime = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isFinished = _useState14[0],\n      setIsFinished = _useState14[1];\n\n  var updateTime = function updateTime(time) {\n    setTime(time);\n  };\n\n  var update = function update(x, y, val) {\n    var originalVal = userVals[x][y];\n\n    var copy = _toConsumableArray(userVals);\n\n    copy[x][y] = val;\n    setUserVals(copy);\n    var startX = 0,\n        startY = 0;\n\n    if (x <= 2 && y <= 2) {\n      startX = 0;\n      startY = 0;\n    } else if (x <= 2 && y >= 3 && y <= 5) {\n      startX = 0;\n      startY = 3;\n    } else if (x <= 2 && y >= 6) {\n      startX = 0;\n      startY = 6;\n    } else if (x >= 3 && x <= 5 && y <= 2) {\n      startX = 3;\n      startY = 0;\n    } else if (x >= 3 && x <= 5 && y >= 3 && y <= 5) {\n      startX = 3;\n      startY = 3;\n    } else if (x >= 3 && x <= 5 && y >= 6) {\n      startX = 3;\n      startY = 6;\n    } else if (x >= 6 && y <= 2) {\n      startX = 6;\n      startY = 0;\n    } else if (x >= 6 && y >= 3 && y <= 5) {\n      startX = 6;\n      startY = 3;\n    } else {\n      startX = 6;\n      startY = 6;\n    }\n\n    if (val != \"\") {\n      var count = 0;\n\n      for (var i = 0; i < 9; i++) {\n        if (i != y && userVals[x][i] == userVals[x][y]) {\n          var _copy2 = _toConsumableArray(isRed);\n\n          _copy2[x][i]++;\n          count++;\n          setIsRed(_copy2);\n        }\n      }\n\n      for (var i = 0; i < 9; i++) {\n        if (i != x && userVals[i][y] == userVals[x][y]) {\n          var _copy3 = _toConsumableArray(isRed);\n\n          _copy3[i][y]++;\n          count++;\n          setIsRed(_copy3);\n        }\n      }\n\n      for (var i = startX; i < startX + 3; i++) {\n        for (var j = startY; j < startY + 3; j++) {\n          if (i != x && j != y && userVals[i][j] == userVals[x][y]) {\n            var _copy4 = _toConsumableArray(isRed);\n\n            _copy4[i][j]++;\n            count++;\n            setIsRed(_copy4);\n          }\n        }\n      }\n\n      var _copy = _toConsumableArray(isRed);\n\n      _copy[x][y] += count;\n      setIsRed(_copy);\n    } else {\n      var _copy5 = _toConsumableArray(isRed);\n\n      _copy5[x][y] = 0;\n      setIsRed(_copy5);\n\n      for (var i = 0; i < 9; i++) {\n        if (i != y && userVals[x][i] == originalVal) {\n          var _copy6 = _toConsumableArray(isRed);\n\n          _copy6[x][i]--;\n          setIsRed(_copy6);\n        }\n      }\n\n      for (var i = 0; i < 9; i++) {\n        if (i != x && userVals[i][y] == originalVal) {\n          var _copy7 = _toConsumableArray(isRed);\n\n          _copy7[i][y]--;\n          setIsRed(_copy7);\n        }\n      }\n\n      for (var i = startX; i < startX + 3; i++) {\n        for (var j = startY; j < startY + 3; j++) {\n          if (i != x && j != y && userVals[i][j] == originalVal) {\n            var _copy8 = _toConsumableArray(isRed);\n\n            _copy8[i][j]--;\n            setIsRed(_copy8);\n          }\n        }\n      }\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.timerPart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }, isFinished ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 23\n    }\n  }, \"N/A\") : React.createElement(Timer, {\n    updateTime: updateTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 42\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, React.createElement(ButtonCell, {\n    num: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }), React.createElement(ButtonCell, {\n    num: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }), React.createElement(ButtonCell, {\n    num: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }), React.createElement(ButtonCell, {\n    num: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }), React.createElement(ButtonCell, {\n    num: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }), React.createElement(ButtonCell, {\n    num: \"5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }), React.createElement(ButtonCell, {\n    num: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }), React.createElement(ButtonCell, {\n    num: \"7\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }), React.createElement(ButtonCell, {\n    num: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }), React.createElement(ButtonCell, {\n    num: \"9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.mainPart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }, React.createElement(LargeGrid, {\n    vals: vals,\n    isRed: isRed,\n    update: update,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.subPart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.subPart1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"blue\",\n    title: \"SUBMIT\",\n    onPress: function onPress() {\n      var isValid = true;\n\n      for (var i = 0; i < 9; i++) {\n        for (var j = 0; j < 9; j++) {\n          if (isRed[i][j] != 0 || userVals[i][j] == \"\") {\n            isValid = false;\n            break;\n          }\n        }\n      }\n\n      if (isValid) {\n        alert(\"Congratulations!\");\n        alert(\"You finish in \" + time + \" s!\");\n        setIsFinished(true);\n        var timeText = (parseInt(time / 60) < 10 ? \"0\" + parseInt(time / 60) : parseInt(time % 60)) + \":\" + (time % 60 < 10 ? \"0\" + time % 60 : time % 60);\n        var theInfo = {\n          userName: userName,\n          time: time,\n          timeText: timeText\n        };\n        storeData(theInfo);\n      } else {\n        alert(\"Failed\");\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.subPart2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"green\",\n    title: \"BEST SCORE\",\n    onPress: function onPress() {\n      getData();\n      setIsVisible(!isVisible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }), isVisible ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 26\n    }\n  }, bestPerson, \" finished in \", bestTime, \" s !\") : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 81\n    }\n  }))));\n};\n\nexport default Grid;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around'\n  },\n  timerPart: {\n    flex: 2,\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  mainPart: {\n    flex: 5,\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  subPart: {\n    flex: 2,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  subPart1: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  subPart2: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  largeGrid: {\n    borderWidth: 3\n  },\n  gridRow: {\n    flexDirection: 'row'\n  },\n  smallGrid: {\n    borderWidth: 1.5\n  },\n  Row: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    justifyContent: 'center'\n  },\n  CellBlue: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#EAF2F8',\n    margin: 2,\n    height: 30,\n    width: 30\n  },\n  CellRed: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5B7B1',\n    margin: 2,\n    height: 30,\n    width: 30\n  },\n  CellButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ff9933',\n    margin: 2,\n    borderWidth: 1,\n    height: 30,\n    width: 30\n  },\n  Circle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 30,\n    height: 30,\n    margin: 2,\n    borderRadius: 15,\n    backgroundColor: '#ff9933'\n  }\n});","map":{"version":3,"sources":["/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/Grid.js"],"names":["React","useState","useEffect","useRef","createRef","setState","Constants","AsyncStorage","Timer","Cell","id0","id1","id2","id3","vals","isRed","update","inputRef","x","y","styles","CellRed","CellBlue","height","width","fontSize","color","textAlign","text","current","clear","ButtonCell","num","Circle","alert","Row","SmallGrid","smallGrid","GridRow","id","gridRow","LargeGrid","largeGrid","Grid","userName","storeData","value","getItem","jsonValue","setItem","JSON","stringify","console","log","data","parse","time","dir","clearAll","getData","setBestPerson","setBestTime","copy","Array","fill","map","i","j","userVals","setUserVals","originRed","setIsRed","setTime","isVisible","setIsVisible","bestPerson","bestTime","isFinished","setIsFinished","updateTime","val","originalVal","startX","startY","count","container","timerPart","flexDirection","mainPart","subPart","subPart1","isValid","timeText","parseInt","theInfo","subPart2","StyleSheet","create","flex","justifyContent","alignItems","borderWidth","backgroundColor","margin","CellButton","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, createRef, setState } from \"react\"\nimport { Text, TextInput, View, StyleSheet, Button } from 'react-native';\nimport Constants from 'expo-constants';\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport Timer from './Timer';\n\n\n\n\nconst Cell = ({id0, id1, id2, id3, vals, isRed, update}) => {\n  const inputRef = React.createRef()\n\n  let x = 3*id0+id2, y = 3*id1+id3;\n  return (\n    <View style={isRed[x][y] ? styles.CellRed : styles.CellBlue}>\n        {vals[x][y] == \"\" ? \n        <TextInput\n          ref={inputRef}\n          style={{height: 28, width: 28, fontSize: 22, color: 'blue', textAlign: 'center'}}\n          maxLength = {1}\n          onChangeText = {(text) => {\n            if ((text > 0 && text <= 9) || text == \"\") {\n              update(x, y, text);\n            } else {\n              inputRef.current.clear()\n            }\n          }}\n        > \n        </TextInput>\n        : <Text style={{fontSize:22}}>{vals[3*id0+id2][3*id1+id3]}</Text>}\n    </View>\n  )\n}\n\nconst ButtonCell = ({num}) => {\n  return (\n\n    <View style={styles.Circle}>\n      <Button \n        color = '#ff9933'\n        title = {num}\n        onPress={() => {\n          alert(num);\n        }}>\n      </Button>    \n    </View>\n  )\n}\n\nconst Row = ({id0, id1, id2, vals, isRed, update}) => {\n  return (\n    <View style={styles.Row}>\n      <Cell id0={id0} id1={id1} id2={id2} id3={0} vals={vals}  isRed={isRed} update={update}/>\n      <Cell id0={id0} id1={id1} id2={id2} id3={1} vals={vals}  isRed={isRed} update={update}/>\n      <Cell id0={id0} id1={id1} id2={id2} id3={2} vals={vals}  isRed={isRed} update={update}/>\n    </View>\n  )\n}\n\n\nconst SmallGrid = ({id0, id1, vals, isRed, update}) => {\n  return (\n    <View style={styles.smallGrid}>\n      <Row id0={id0} id1={id1} id2={0} vals={vals}  isRed={isRed} update={update}/>\n      <Row id0={id0} id1={id1} id2={1} vals={vals}  isRed={isRed} update={update}/>\n      <Row id0={id0} id1={id1} id2={2} vals={vals}  isRed={isRed} update={update}/>\n    </View>\n  )\n}\n\nconst GridRow = ({id, vals, isRed, update}) => {\n  return (\n    <View style={styles.gridRow}>\n      <SmallGrid id0={id} id1={0} vals={vals}  isRed={isRed} update={update}/>\n      <SmallGrid id0={id} id1={1} vals={vals}  isRed={isRed} update={update}/>\n      <SmallGrid id0={id} id1={2} vals={vals}  isRed={isRed} update={update}/>\n    </View>\n  )\n}\n\nconst LargeGrid = ({vals, isRed, update}) => {\n  return (\n    <View style={styles.largeGrid}>\n      <GridRow id={0} vals={vals}  isRed={isRed} update={update}/>\n      <GridRow id={1} vals={vals}  isRed={isRed} update={update}/>\n      <GridRow id={2} vals={vals}  isRed={isRed} update={update}/>\n    </View>\n  )\n}\n\nconst Grid = ({vals, userName}) => {\n\n  const storeData = async (value) => {\n    try {\n      const jsonValue = await AsyncStorage.getItem('@sudoku_best');\n      if (jsonValue == null) {\n        await AsyncStorage.setItem('@sudoku_best', JSON.stringify(value));\n        console.log('just stored ' + value);\n      } else {\n        var data = JSON.parse(jsonValue);\n        //alert(data.userName);\n        //alert(jsonValue);\n        //alert(data.userName);\n        //alert(value.userName);\n        if (value.time <= data.time) {\n          await AsyncStorage.setItem('@sudoku_best', JSON.stringify(value));\n          console.log('just stored '+ jsonValue);\n        }\n        //const jsonValue = JSON.stringify(value)\n      }\n\n    } catch (e) {\n      console.log(\"error in storeData \");\n      console.dir(e);\n      // saving error\n    }\n  }\n\n  const clearAll = async () => {\n    try {\n      await AsyncStorage.clear();\n    } catch(e) {\n      console.dir(e);\n    }\n  }\n\n  const getData = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem('@sudoku_best');\n      let data = null;\n      if (jsonValue!=null) {\n        data = JSON.parse(jsonValue);\n        setBestPerson(data.userName);\n        setBestTime(data.time);\n        //alert(jsonValue);\n        console.log('just set Info, Correct and Answered');\n      } else {\n        console.log('just read a null value from Storage');\n      }\n    } catch(e) {\n      console.log(\"error in getData \");\n      console.dir(e);\n      // error reading value\n    }\n  }\n\n\n/*useEffect(() => {\n  clearAll();\n},[])*/\n  \n\n\n  let copy = new Array(9).fill(\"\").map(() => new Array(9).fill(\"\"));\n  for (var i = 0; i < 9; i++) {\n    for (var j = 0; j < 9; j++) {\n      copy[i][j] = vals[i][j];\n    }\n  }\n  const [userVals, setUserVals] = useState(copy);\n\n  let originRed = new Array(9).fill(0).map(() => new Array(9).fill(0));\n  const [isRed, setIsRed] = useState(originRed);\n  const [time, setTime] = useState(0);\n  const [isVisible, setIsVisible] = useState(false);\n  const [bestPerson, setBestPerson] = useState(\"Null\");\n  const [bestTime, setBestTime] = useState(\"NA\");\n  const [isFinished, setIsFinished] = useState(false);\n\n\n\n  const updateTime = (time) => {\n    setTime(time);\n  }\n\n\n  const update = (x, y, val) => {\n    let originalVal = userVals[x][y];\n    let copy = [...userVals];\n    copy[x][y] = val;\n    setUserVals(copy);\n    let startX = 0, startY = 0;\n    if (x <= 2 && y <= 2) {\n      startX = 0; startY = 0;\n    } else if (x <= 2 && y >= 3 && y <= 5) {\n      startX = 0; startY = 3;\n    } else if (x <= 2 && y >= 6) {\n      startX = 0; startY = 6;\n    } else if (x >= 3 && x <= 5 && y <= 2) {\n      startX = 3; startY = 0;\n    } else if (x >= 3 && x <= 5 && y >= 3 && y <= 5) {\n      startX = 3; startY = 3;\n    } else if (x >= 3 && x <= 5 && y >= 6) {\n      startX = 3; startY = 6;\n    } else if (x >= 6 && y <= 2) {\n      startX = 6; startY = 0;\n    } else if (x >= 6 && y >= 3 && y <= 5) {\n      startX = 6; startY = 3;\n    } else {\n      startX = 6; startY = 6;\n    }\n    if (val != \"\") {\n      let count = 0;\n      for (var i = 0; i < 9; i++) {\n        if (i != y && userVals[x][i] == userVals[x][y]) {\n          let copy = [...isRed];\n          copy[x][i]++;\n          count++;\n          setIsRed(copy);\n        }\n      }\n      for (var i = 0; i < 9; i++) {\n        if (i != x && userVals[i][y] == userVals[x][y]) {\n          let copy = [...isRed];\n          copy[i][y]++;\n          count++;\n          setIsRed(copy);\n        }\n      }\n      for (var i = startX; i < startX + 3; i++) {\n        for (var j = startY; j < startY + 3; j++) {\n          if (i != x && j != y && userVals[i][j] == userVals[x][y]) {\n            let copy = [...isRed];\n            copy[i][j]++;\n            count++;\n            setIsRed(copy);\n          }\n        }\n      }\n      let copy = [...isRed];\n      copy[x][y] += count;\n      setIsRed(copy);\n    } else {\n      let copy = [...isRed];\n      copy[x][y] = 0;\n      setIsRed(copy);\n      for (var i = 0; i < 9; i++) {\n        if (i != y && userVals[x][i] == originalVal) {\n          let copy = [...isRed];\n          copy[x][i]--;\n          setIsRed(copy);\n        }\n      }\n      for (var i = 0; i < 9; i++) {\n        if (i != x && userVals[i][y] == originalVal) {\n          let copy = [...isRed];\n          copy[i][y]--;\n          setIsRed(copy);\n        }\n      }\n      for (var i = startX; i < startX + 3; i++) {\n        for (var j = startY; j < startY + 3; j++) {\n          if (i != x && j != y && userVals[i][j] == originalVal) {\n            let copy = [...isRed];\n            copy[i][j]--;\n            setIsRed(copy);\n          }\n        }\n      }\n    }\n\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.timerPart}>\n        {isFinished ? <Text>N/A</Text> : <Timer updateTime={updateTime}/>}\n      </View>\n      <View style={{flexDirection:'row'}}>\n        <ButtonCell num = '0'/>\n        <ButtonCell num = '1'/>\n        <ButtonCell num = '2'/>\n        <ButtonCell num = '3'/>\n        <ButtonCell num = '4'/>\n        <ButtonCell num = '5'/>\n        <ButtonCell num = '6'/>\n        <ButtonCell num = '7'/>\n        <ButtonCell num = '8'/>\n        <ButtonCell num = '9'/>\n      </View>\n      <View style={styles.mainPart}>\n        <LargeGrid vals={vals} isRed={isRed} update={update}/>\n      </View>\n      <View style={styles.subPart}>\n        <View style={styles.subPart1}>\n          <Button color=\"blue\" \n           title=\"SUBMIT\" \n            onPress={() => {\n              let isValid = true;\n              for (var i = 0; i < 9; i++) {\n                for (var j = 0; j < 9; j++) {\n                  if (isRed[i][j] != 0 || userVals[i][j] == \"\") {\n                    isValid = false;\n                    break;\n                  }\n                }\n              }\n              if (isValid) {\n                alert(\"Congratulations!\");\n                alert(\"You finish in \" + time + \" s!\");\n                setIsFinished(true);\n                let timeText = (parseInt(time / 60) < 10 ? \"0\" + parseInt(time / 60) : parseInt(time % 60)) + \":\" + ((time % 60) < 10 ? \"0\" + time % 60 : time % 60);\n                const theInfo = {userName:userName, time:time, timeText:timeText};\n                storeData(theInfo);\n                //alert(JSON.stringify(theInfo));\n\n              } else {\n                alert(\"Failed\");\n              }\n            }}>\n          </Button>\n        </View>\n\n        <View style={styles.subPart2}>\n          <Button color=\"green\" \n            title=\"BEST SCORE\" \n              onPress={() => {\n                getData();\n                setIsVisible(!isVisible);\n              }}>\n            </Button>\n            {isVisible ? <Text>{bestPerson} finished in {bestTime} s !</Text> : <View/>}\n        </View>\n\n      </View>\n\n    </View>\n    //<LargeGrid vals={vals} userVals={userVals} setUserVals={setUserVals}/>\n  );\n}\n//<Text>{userVals.toString()}</Text>\n//<Text>{isRed.toString()}</Text>\n\nexport default Grid;\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around'\n  },\n  timerPart: {\n    flex: 2,\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  mainPart: {\n    flex: 5,\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  subPart: {\n    flex: 2,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  subPart1: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  subPart2: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  largeGrid:{\n    borderWidth: 3\n  },\n  gridRow:{\n    flexDirection: 'row'\n  },\n  smallGrid:{\n    borderWidth: 1.5\n  },\n  Row: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    justifyContent: 'center',\n  },\n  CellBlue:{\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#EAF2F8',\n    margin: 2,\n    height: 30,\n    width: 30,\n  },\n  CellRed:{\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5B7B1',\n    margin: 2,\n    height: 30,\n    width: 30,\n  },\n  CellButton:{\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ff9933',\n    margin: 2,\n    borderWidth: 1,\n    height: 30,\n    width: 30,\n  },\n  Circle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 30,\n    height: 30,\n    margin: 2,\n    borderRadius: 15,\n    backgroundColor: '#ff9933',\n  }\n});"]},"metadata":{},"sourceType":"module"}