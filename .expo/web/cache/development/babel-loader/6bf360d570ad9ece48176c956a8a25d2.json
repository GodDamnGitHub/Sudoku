{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/Grid.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef, createRef, setState, useContext, createContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Timer from \"./Timer\";\nimport ValueProvider, { useValue } from \"./ValueContext\";\nimport Axios from 'axios';\nvar url = \"https://secure-earth-67171.herokuapp.com\";\n\nvar Cell = function Cell(_ref) {\n  var id0 = _ref.id0,\n      id1 = _ref.id1,\n      id2 = _ref.id2,\n      id3 = _ref.id3;\n  var inputRef = React.createRef();\n  var value = useValue();\n  var vals = value.vals;\n  var isRed = value.isRed;\n  var update = value.update;\n  var x = 3 * id0 + id2,\n      y = 3 * id1 + id3;\n  return React.createElement(View, {\n    style: isRed[x][y] ? styles.CellRed : styles.CellBlue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, vals[x][y] == \"\" ? React.createElement(TextInput, {\n    ref: inputRef,\n    style: {\n      height: 28,\n      width: 28,\n      fontSize: 22,\n      color: 'blue',\n      textAlign: 'center'\n    },\n    maxLength: 1,\n    onChangeText: function onChangeText(text) {\n      if (text > 0 && text <= 9 || text == \"\") {\n        update(x, y, text);\n      } else {\n        inputRef.current.clear();\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }) : React.createElement(Text, {\n    style: {\n      fontSize: 22\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, vals[3 * id0 + id2][3 * id1 + id3]));\n};\n\nvar Row = function Row(_ref2) {\n  var id0 = _ref2.id0,\n      id1 = _ref2.id1,\n      id2 = _ref2.id2;\n  return React.createElement(View, {\n    style: styles.Row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(Cell, {\n    id0: id0,\n    id1: id1,\n    id2: id2,\n    id3: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(Cell, {\n    id0: id0,\n    id1: id1,\n    id2: id2,\n    id3: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Cell, {\n    id0: id0,\n    id1: id1,\n    id2: id2,\n    id3: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar SmallGrid = function SmallGrid(_ref3) {\n  var id0 = _ref3.id0,\n      id1 = _ref3.id1;\n  return React.createElement(View, {\n    style: styles.smallGrid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Row, {\n    id0: id0,\n    id1: id1,\n    id2: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(Row, {\n    id0: id0,\n    id1: id1,\n    id2: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(Row, {\n    id0: id0,\n    id1: id1,\n    id2: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar GridRow = function GridRow(_ref4) {\n  var id = _ref4.id;\n  return React.createElement(View, {\n    style: styles.gridRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(SmallGrid, {\n    id0: id,\n    id1: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(SmallGrid, {\n    id0: id,\n    id1: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(SmallGrid, {\n    id0: id,\n    id1: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar LargeGrid = function LargeGrid() {\n  return React.createElement(View, {\n    style: styles.largeGrid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(GridRow, {\n    id: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), React.createElement(GridRow, {\n    id: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), React.createElement(GridRow, {\n    id: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar Grid = function Grid(_ref5) {\n  var vals = _ref5.vals,\n      userName = _ref5.userName,\n      mode = _ref5.mode;\n\n  var storeData = function storeData(value) {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@sudoku_best'));\n\n          case 3:\n            jsonValue = _context.sent;\n\n            if (!(jsonValue == null)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@sudoku_best', JSON.stringify(value)));\n\n          case 7:\n            console.log('just stored ' + value);\n            _context.next = 15;\n            break;\n\n          case 10:\n            data = JSON.parse(jsonValue);\n\n            if (!(value.time <= data.time)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@sudoku_best', JSON.stringify(value)));\n\n          case 14:\n            console.log('just stored ' + jsonValue);\n\n          case 15:\n            _context.next = 21;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error in storeData \");\n            console.dir(_context.t0);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n\n  var storeData2 = function storeData2(value) {\n    var _userName, timeText, jsonValue, data, curData, newData;\n\n    return _regeneratorRuntime.async(function storeData2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _userName = value.userName;\n            timeText = value.timeText;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@sudoku_scores'));\n\n          case 5:\n            jsonValue = _context2.sent;\n\n            if (!(jsonValue == null)) {\n              _context2.next = 13;\n              break;\n            }\n\n            data = [{\n              userName: _userName,\n              time: time,\n              timeText: timeText\n            }];\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@sudoku_scores', JSON.stringify(data)));\n\n          case 10:\n            console.log('just stored ' + value);\n            _context2.next = 19;\n            break;\n\n          case 13:\n            data = JSON.parse(jsonValue);\n            curData = {\n              userName: _userName,\n              time: time,\n              timeText: timeText\n            };\n            newData = [].concat(_toConsumableArray(data), [curData]);\n            _context2.next = 18;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@sudoku_scores', JSON.stringify(newData)));\n\n          case 18:\n            console.log('just stored ' + jsonValue);\n\n          case 19:\n            _context2.next = 25;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"error in storeData \");\n            console.dir(_context2.t0);\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 21]], Promise);\n  };\n\n  var clearAll = function clearAll() {\n    return _regeneratorRuntime.async(function clearAll$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n          case 3:\n            _context3.next = 8;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.dir(_context3.t0);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@sudoku_best'));\n\n          case 3:\n            jsonValue = _context4.sent;\n            data = null;\n\n            if (jsonValue != null) {\n              data = JSON.parse(jsonValue);\n              setBestPerson(data.userName);\n              setBestTime(data.time);\n              console.log('just set Info, Correct and Answered');\n            } else {\n              console.log('just read a null value from Storage');\n            }\n\n            _context4.next = 12;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(\"error in getData \");\n            console.dir(_context4.t0);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var copy = new Array(9).fill(\"\").map(function () {\n    return new Array(9).fill(\"\");\n  });\n\n  for (var i = 0; i < 9; i++) {\n    for (var j = 0; j < 9; j++) {\n      copy[i][j] = vals[i][j];\n    }\n  }\n\n  var _useState = useState(copy),\n      _useState2 = _slicedToArray(_useState, 2),\n      userVals = _useState2[0],\n      setUserVals = _useState2[1];\n\n  var originRed = new Array(9).fill(0).map(function () {\n    return new Array(9).fill(0);\n  });\n\n  var _useState3 = useState(originRed),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRed = _useState4[0],\n      setIsRed = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      time = _useState6[0],\n      setTime = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isVisible = _useState8[0],\n      setIsVisible = _useState8[1];\n\n  var _useState9 = useState(\"Null\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      bestPerson = _useState10[0],\n      setBestPerson = _useState10[1];\n\n  var _useState11 = useState(\"NA\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      bestTime = _useState12[0],\n      setBestTime = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isFinished = _useState14[0],\n      setIsFinished = _useState14[1];\n\n  var updateTime = function updateTime(time) {\n    setTime(time);\n  };\n\n  var update = function update(x, y, val) {\n    var originalVal = userVals[x][y];\n\n    var copy = _toConsumableArray(userVals);\n\n    copy[x][y] = val;\n    setUserVals(copy);\n    var startX = 0,\n        startY = 0;\n\n    if (x <= 2 && y <= 2) {\n      startX = 0;\n      startY = 0;\n    } else if (x <= 2 && y >= 3 && y <= 5) {\n      startX = 0;\n      startY = 3;\n    } else if (x <= 2 && y >= 6) {\n      startX = 0;\n      startY = 6;\n    } else if (x >= 3 && x <= 5 && y <= 2) {\n      startX = 3;\n      startY = 0;\n    } else if (x >= 3 && x <= 5 && y >= 3 && y <= 5) {\n      startX = 3;\n      startY = 3;\n    } else if (x >= 3 && x <= 5 && y >= 6) {\n      startX = 3;\n      startY = 6;\n    } else if (x >= 6 && y <= 2) {\n      startX = 6;\n      startY = 0;\n    } else if (x >= 6 && y >= 3 && y <= 5) {\n      startX = 6;\n      startY = 3;\n    } else {\n      startX = 6;\n      startY = 6;\n    }\n\n    if (val != \"\") {\n      var count = 0;\n\n      for (var i = 0; i < 9; i++) {\n        if (i != y && userVals[x][i] == userVals[x][y]) {\n          var _copy2 = _toConsumableArray(isRed);\n\n          _copy2[x][i]++;\n          count++;\n          setIsRed(_copy2);\n        }\n      }\n\n      for (var i = 0; i < 9; i++) {\n        if (i != x && userVals[i][y] == userVals[x][y]) {\n          var _copy3 = _toConsumableArray(isRed);\n\n          _copy3[i][y]++;\n          count++;\n          setIsRed(_copy3);\n        }\n      }\n\n      for (var i = startX; i < startX + 3; i++) {\n        for (var j = startY; j < startY + 3; j++) {\n          if (i != x && j != y && userVals[i][j] == userVals[x][y]) {\n            var _copy4 = _toConsumableArray(isRed);\n\n            _copy4[i][j]++;\n            count++;\n            setIsRed(_copy4);\n          }\n        }\n      }\n\n      var _copy = _toConsumableArray(isRed);\n\n      _copy[x][y] += count;\n      setIsRed(_copy);\n    } else {\n      var _copy5 = _toConsumableArray(isRed);\n\n      _copy5[x][y] = 0;\n      setIsRed(_copy5);\n\n      for (var i = 0; i < 9; i++) {\n        if (i != y && userVals[x][i] == originalVal) {\n          var _copy6 = _toConsumableArray(isRed);\n\n          _copy6[x][i]--;\n          setIsRed(_copy6);\n        }\n      }\n\n      for (var i = 0; i < 9; i++) {\n        if (i != x && userVals[i][y] == originalVal) {\n          var _copy7 = _toConsumableArray(isRed);\n\n          _copy7[i][y]--;\n          setIsRed(_copy7);\n        }\n      }\n\n      for (var i = startX; i < startX + 3; i++) {\n        for (var j = startY; j < startY + 3; j++) {\n          if (i != x && j != y && userVals[i][j] == originalVal) {\n            var _copy8 = _toConsumableArray(isRed);\n\n            _copy8[i][j]--;\n            setIsRed(_copy8);\n          }\n        }\n      }\n    }\n  };\n\n  var updateSelected = function updateSelected(x, y) {\n    setCurX(x);\n    setCurY(y);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.timerPart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, isFinished ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 23\n    }\n  }, \"N/A\") : React.createElement(Timer, {\n    updateTime: updateTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 42\n    }\n  })), React.createElement(View, {\n    style: styles.mainPart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }\n  }, React.createElement(ValueProvider, {\n    value: {\n      vals: vals,\n      isRed: isRed,\n      update: update\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  }, React.createElement(LargeGrid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }))), React.createElement(View, {\n    style: styles.subPart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.subPart1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"blue\",\n    title: \"SUBMIT\",\n    onPress: function onPress() {\n      var isValid = true;\n\n      for (var i = 0; i < 9; i++) {\n        for (var j = 0; j < 9; j++) {\n          if (isRed[i][j] != 0 || userVals[i][j] == \"\") {\n            isValid = false;\n            break;\n          }\n        }\n      }\n\n      if (isValid) {\n        alert(\"Congratulations!\\nYou finish in \" + time + \" s!\");\n        setIsFinished(true);\n        var timeText = (parseInt(time / 60) < 10 ? \"0\" + parseInt(time / 60) : parseInt(time % 60)) + \":\" + (time % 60 < 10 ? \"0\" + time % 60 : time % 60);\n        AsyncStorage.getItem('@name').then(function (userName) {\n          var data = {\n            name: userName,\n            time: time\n          };\n          Axios.post(url + '/submit', data);\n        });\n      } else {\n        alert(\"Failed\");\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Grid;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around'\n  },\n  timerPart: {\n    flex: 1.5,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    padding: 10\n  },\n  mainPart: {\n    flex: 5,\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  subPart: {\n    flex: 2,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  subPart1: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  subPart2: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  largeGrid: {\n    borderWidth: 3\n  },\n  gridRow: {\n    flexDirection: 'row'\n  },\n  smallGrid: {\n    borderWidth: 1.5\n  },\n  Row: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    justifyContent: 'center'\n  },\n  CellBlue: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#EAF2F8',\n    margin: 2,\n    height: 30,\n    width: 30\n  },\n  CellRed: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5B7B1',\n    margin: 2,\n    height: 30,\n    width: 30\n  },\n  CellButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ff9933',\n    margin: 2,\n    borderWidth: 1,\n    height: 30,\n    width: 30\n  },\n  Circle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 30,\n    height: 30,\n    margin: 2,\n    borderRadius: 15,\n    backgroundColor: '#ff9933'\n  }\n});","map":{"version":3,"sources":["/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/Grid.js"],"names":["React","useState","useEffect","useRef","createRef","setState","useContext","createContext","AsyncStorage","Timer","ValueProvider","useValue","Axios","url","Cell","id0","id1","id2","id3","inputRef","value","vals","isRed","update","x","y","styles","CellRed","CellBlue","height","width","fontSize","color","textAlign","text","current","clear","Row","SmallGrid","smallGrid","GridRow","id","gridRow","LargeGrid","largeGrid","Grid","userName","mode","storeData","getItem","jsonValue","setItem","JSON","stringify","console","log","data","parse","time","dir","storeData2","timeText","curData","newData","clearAll","getData","setBestPerson","setBestTime","copy","Array","fill","map","i","j","userVals","setUserVals","originRed","setIsRed","setTime","isVisible","setIsVisible","bestPerson","bestTime","isFinished","setIsFinished","updateTime","val","originalVal","startX","startY","count","updateSelected","setCurX","setCurY","Platform","OS","container","timerPart","mainPart","subPart","subPart1","isValid","alert","parseInt","then","name","post","StyleSheet","create","flex","justifyContent","alignItems","padding","flexDirection","subPart2","borderWidth","backgroundColor","margin","CellButton","Circle","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, createRef, setState, useContext, createContext } from \"react\"\nimport { Text, TextInput, View, StyleSheet, Button, TouchableOpacity, KeyboardAvoidingView, Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Timer from './Timer';\nimport ValueProvider, {useValue} from './ValueContext';\nimport Axios from 'axios';\n\nconst url = \"https://secure-earth-67171.herokuapp.com\";\n\n\nconst Cell = ({id0, id1, id2, id3}) => {\n  const inputRef = React.createRef()\n  const value = useValue();\n  const vals = value.vals;\n  const isRed = value.isRed;\n  const update = value.update;\n\n\n  let x = 3*id0+id2, y = 3*id1+id3;\n  return (\n\n    <View style={isRed[x][y] ? styles.CellRed : styles.CellBlue}>\n      {vals[x][y] == \"\" ? \n      <TextInput\n        ref={inputRef}\n        style={{height: 28, width: 28, fontSize: 22, color: 'blue', textAlign: 'center'}}\n        maxLength = {1}\n        onChangeText = {(text) => {\n          if ((text > 0 && text <= 9) || text == \"\") {\n            update(x, y, text);\n          } else {\n            inputRef.current.clear()\n          }\n        }}\n      > \n      </TextInput>\n      : <Text style={{fontSize:22}}>{vals[3*id0+id2][3*id1+id3]}</Text>}\n      \n    </View>  \n  )\n}\n\n\nconst Row = ({id0, id1, id2}) => {\n  return (\n    <View style={styles.Row}>\n      <Cell id0={id0} id1={id1} id2={id2} id3={0}/>\n      <Cell id0={id0} id1={id1} id2={id2} id3={1}/>\n      <Cell id0={id0} id1={id1} id2={id2} id3={2}/>\n    </View>\n  )\n}\n\n\nconst SmallGrid = ({id0, id1}) => {\n  return (\n    <View style={styles.smallGrid}>\n      <Row id0={id0} id1={id1} id2={0}/>\n      <Row id0={id0} id1={id1} id2={1}/>\n      <Row id0={id0} id1={id1} id2={2}/>\n    </View>\n  )\n}\n\nconst GridRow = ({id}) => {\n  return (\n    <View style={styles.gridRow}>\n      <SmallGrid id0={id} id1={0}/>\n      <SmallGrid id0={id} id1={1}/>\n      <SmallGrid id0={id} id1={2}/>\n    </View>\n  )\n}\n\nconst LargeGrid = () => {\n  return (\n    <View style={styles.largeGrid}>\n      <GridRow id={0}/>\n      <GridRow id={1}/>\n      <GridRow id={2}/>\n    </View>\n  )\n}\n\nconst Grid = ({vals, userName, mode}) => {\n\n  const storeData = async (value) => {\n    try {\n      const jsonValue = await AsyncStorage.getItem('@sudoku_best');\n      if (jsonValue == null) {\n        await AsyncStorage.setItem('@sudoku_best', JSON.stringify(value));\n        console.log('just stored ' + value);\n      } else {\n        var data = JSON.parse(jsonValue);\n        //alert(data.userName);\n        //alert(jsonValue);\n        //alert(data.userName);\n        //alert(value.userName);\n        if (value.time <= data.time) {\n          await AsyncStorage.setItem('@sudoku_best', JSON.stringify(value));\n          console.log('just stored '+ jsonValue);\n        }\n        //const jsonValue = JSON.stringify(value)\n      }\n\n    } catch (e) {\n      console.log(\"error in storeData \");\n      console.dir(e);\n      // saving error\n    }\n  }\n\n  const storeData2 = async (value) => {\n    try {\n      let userName = value.userName;\n      let timeText = value.timeText;\n      const jsonValue = await AsyncStorage.getItem('@sudoku_scores');\n      if (jsonValue == null) {\n        var data = [{\n          userName: userName,\n          time: time,\n          timeText: timeText\n        }]      \n        await AsyncStorage.setItem('@sudoku_scores', JSON.stringify(data));\n        console.log('just stored ' + value);\n      } else {\n        var data = JSON.parse(jsonValue);\n        var curData = {\n          userName: userName,\n          time: time,\n          timeText: timeText\n        };\n        var newData = [...data, curData];\n        await AsyncStorage.setItem('@sudoku_scores', JSON.stringify(newData));\n        console.log('just stored '+ jsonValue);\n        //const jsonValue = JSON.stringify(value)\n      }\n\n    } catch (e) {\n      console.log(\"error in storeData \");\n      console.dir(e);\n      // saving error\n    }\n  }\n\n  const clearAll = async () => {\n    try {\n      await AsyncStorage.clear();\n    } catch(e) {\n      console.dir(e);\n    }\n  }\n\n  const getData = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem('@sudoku_best');\n      let data = null;\n      if (jsonValue!=null) {\n        data = JSON.parse(jsonValue);\n        setBestPerson(data.userName);\n        setBestTime(data.time);\n        //alert(jsonValue);\n        console.log('just set Info, Correct and Answered');\n      } else {\n        console.log('just read a null value from Storage');\n      }\n    } catch(e) {\n      console.log(\"error in getData \");\n      console.dir(e);\n      // error reading value\n    }\n  }\n\n\n/*useEffect(() => {\n  clearAll();\n},[])*/\n  \n\n\n  let copy = new Array(9).fill(\"\").map(() => new Array(9).fill(\"\"));\n  for (var i = 0; i < 9; i++) {\n    for (var j = 0; j < 9; j++) {\n      copy[i][j] = vals[i][j];\n    }\n  }\n  const [userVals, setUserVals] = useState(copy);\n\n  let originRed = new Array(9).fill(0).map(() => new Array(9).fill(0));\n  const [isRed, setIsRed] = useState(originRed);\n  const [time, setTime] = useState(0);\n  const [isVisible, setIsVisible] = useState(false);\n  const [bestPerson, setBestPerson] = useState(\"Null\");\n  const [bestTime, setBestTime] = useState(\"NA\");\n  const [isFinished, setIsFinished] = useState(false);\n\n\n\n\n  const updateTime = (time) => {\n    setTime(time);\n  }\n\n\n  const update = (x, y, val) => {\n    let originalVal = userVals[x][y];\n    let copy = [...userVals];\n    copy[x][y] = val;\n    setUserVals(copy);\n    let startX = 0, startY = 0;\n    if (x <= 2 && y <= 2) {\n      startX = 0; startY = 0;\n    } else if (x <= 2 && y >= 3 && y <= 5) {\n      startX = 0; startY = 3;\n    } else if (x <= 2 && y >= 6) {\n      startX = 0; startY = 6;\n    } else if (x >= 3 && x <= 5 && y <= 2) {\n      startX = 3; startY = 0;\n    } else if (x >= 3 && x <= 5 && y >= 3 && y <= 5) {\n      startX = 3; startY = 3;\n    } else if (x >= 3 && x <= 5 && y >= 6) {\n      startX = 3; startY = 6;\n    } else if (x >= 6 && y <= 2) {\n      startX = 6; startY = 0;\n    } else if (x >= 6 && y >= 3 && y <= 5) {\n      startX = 6; startY = 3;\n    } else {\n      startX = 6; startY = 6;\n    }\n    if (val != \"\") {\n      let count = 0;\n      for (var i = 0; i < 9; i++) {\n        if (i != y && userVals[x][i] == userVals[x][y]) {\n          let copy = [...isRed];\n          copy[x][i]++;\n          count++;\n          setIsRed(copy);\n        }\n      }\n      for (var i = 0; i < 9; i++) {\n        if (i != x && userVals[i][y] == userVals[x][y]) {\n          let copy = [...isRed];\n          copy[i][y]++;\n          count++;\n          setIsRed(copy);\n        }\n      }\n      for (var i = startX; i < startX + 3; i++) {\n        for (var j = startY; j < startY + 3; j++) {\n          if (i != x && j != y && userVals[i][j] == userVals[x][y]) {\n            let copy = [...isRed];\n            copy[i][j]++;\n            count++;\n            setIsRed(copy);\n          }\n        }\n      }\n      let copy = [...isRed];\n      copy[x][y] += count;\n      setIsRed(copy);\n    } else {\n      let copy = [...isRed];\n      copy[x][y] = 0;\n      setIsRed(copy);\n      for (var i = 0; i < 9; i++) {\n        if (i != y && userVals[x][i] == originalVal) {\n          let copy = [...isRed];\n          copy[x][i]--;\n          setIsRed(copy);\n        }\n      }\n      for (var i = 0; i < 9; i++) {\n        if (i != x && userVals[i][y] == originalVal) {\n          let copy = [...isRed];\n          copy[i][y]--;\n          setIsRed(copy);\n        }\n      }\n      for (var i = startX; i < startX + 3; i++) {\n        for (var j = startY; j < startY + 3; j++) {\n          if (i != x && j != y && userVals[i][j] == originalVal) {\n            let copy = [...isRed];\n            copy[i][j]--;\n            setIsRed(copy);\n          }\n        }\n      }\n    }\n\n  }\n\n  const updateSelected = (x, y) => {\n    setCurX(x);\n    setCurY(y);\n  }\n\n\n  return (\n    <KeyboardAvoidingView \n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={styles.container}>\n      <View style={styles.timerPart}>\n        {isFinished ? <Text>N/A</Text> : <Timer updateTime={updateTime}/>}\n      </View>\n      <View style={styles.mainPart}>\n      <ValueProvider\n        value={{vals, isRed, update}} >  \n        <LargeGrid/>\n      </ValueProvider>\n      </View>\n      <View style={styles.subPart}>\n        <View style={styles.subPart1}>\n          <Button color=\"blue\" \n           title=\"SUBMIT\" \n            onPress={() => {\n              let isValid = true;\n              for (var i = 0; i < 9; i++) {\n                for (var j = 0; j < 9; j++) {\n                  if (isRed[i][j] != 0 || userVals[i][j] == \"\") {\n                    isValid = false;\n                    break;\n                  }\n                }\n              }\n              if (isValid) {\n                alert(\"Congratulations!\\nYou finish in \" + time + \" s!\");\n                setIsFinished(true);\n                let timeText = (parseInt(time / 60) < 10 ? \"0\" + parseInt(time / 60) : parseInt(time % 60)) + \":\" + ((time % 60) < 10 ? \"0\" + time % 60 : time % 60);\n                AsyncStorage.getItem('@name')\n                  .then((userName) => {\n                    const data = {name:userName, time:time};\n                    Axios.post(url+'/submit',data);\n                  })\n\n                //storeData(theInfo);\n                //storeData2(theInfo);\n                //alert(JSON.stringify(theInfo));\n\n              } else {\n                alert(\"Failed\");\n              }\n            }}>\n          </Button>\n        </View>\n\n\n\n      </View>\n\n    </KeyboardAvoidingView>\n    //<LargeGrid vals={vals} userVals={userVals} setUserVals={setUserVals}/>\n  );\n}\n//<Text>{userVals.toString()}</Text>\n//<Text>{isRed.toString()}</Text>\n\nexport default Grid;\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around'\n  },\n  timerPart: {\n    flex: 1.5,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    padding: 10\n  },\n  mainPart: {\n    flex: 5,\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  subPart: {\n    flex: 2,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  subPart1: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  subPart2: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  largeGrid:{\n    borderWidth: 3\n  },\n  gridRow:{\n    flexDirection: 'row'\n  },\n  smallGrid:{\n    borderWidth: 1.5\n  },\n  Row: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    justifyContent: 'center',\n  },\n  CellBlue:{\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#EAF2F8',\n    margin: 2,\n    height: 30,\n    width: 30,\n  },\n  CellRed:{\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5B7B1',\n    margin: 2,\n    height: 30,\n    width: 30,\n  },\n  CellButton:{\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ff9933',\n    margin: 2,\n    borderWidth: 1,\n    height: 30,\n    width: 30,\n  },\n  Circle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 30,\n    height: 30,\n    margin: 2,\n    borderRadius: 15,\n    backgroundColor: '#ff9933',\n  }\n});"]},"metadata":{},"sourceType":"module"}