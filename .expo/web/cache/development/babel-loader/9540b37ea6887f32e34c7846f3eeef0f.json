{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/EasyModeScreen.js\";\nimport React, { useState, useEffect, useRef, createRef, setState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Grid from \"./Grid.js\";\nimport * as easyData from \"../data/easyData.json\";\n\nfunction EasyModeScreen() {\n  var vals = easyData.sudokuList[0];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isInput = _useState2[0],\n      setIsInput = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userName = _useState4[0],\n      setUserName = _useState4[1];\n\n  if (!isInput) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(text) {\n        setUserName(text);\n      },\n      placeholder: \"Please enter your name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      color: \"blue\",\n      title: \"submit\",\n      onPress: function onPress() {\n        setIsInput(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, React.createElement(Grid, {\n      vals: vals,\n      userName: userName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nexport default EasyModeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/EasyModeScreen.js"],"names":["React","useState","useEffect","useRef","createRef","setState","NavigationContainer","createNativeStackNavigator","Grid","easyData","EasyModeScreen","vals","sudokuList","isInput","setIsInput","userName","setUserName","styles","container","input","text","StyleSheet","create","flex","alignItems","justifyContent","height","margin","borderWidth","padding"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,SAA7C,EAAwDC,QAAxD,QAAwE,OAAxE;;;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,IAAP;AACA,OAAO,KAAKC,QAAZ;;AAIA,SAASC,cAAT,GAA0B;AACxB,MAAIC,IAAI,GAAGF,QAAQ,CAACG,UAAT,CAAoB,CAApB,CAAX;;AAUA,kBAA8BX,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOY,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAgCb,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOc,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAI,CAACH,OAAL,EAAc;AACZ,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,MAAA,YAAY,EAAI,sBAACC,IAAD,EAAU;AACxBJ,QAAAA,WAAW,CAACI,IAAD,CAAX;AACD,OAJH;AAKE,MAAA,WAAW,EAAC,wBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbN,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAkBD,GAnBD,MAmBO;AACL,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEP,IAAZ;AAAkB,MAAA,QAAQ,EAAEI,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;AAEF;;AAGD,eAAeL,cAAf;AAEA,IAAMO,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,OAAO,EAAE;AAJJ;AANwB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, useRef, createRef, setState } from \"react\"\nimport { Button, View, Text, StyleSheet, ImageBackground, Image, TextInput } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Grid from './Grid.js';\nimport * as easyData from '../data/easyData.json';\n\n\n\nfunction EasyModeScreen() {\n  let vals = easyData.sudokuList[0];\n  /*let vals = [[\"\",\"\",5,8,\"\",\"\",9,2,\"\"],\n              [\"\",\"\",\"\",\"\",4,9,8,5,1], \n              [\"\",9,1,2,\"\",\"\",\"\",\"\",3],\n              [\"\",\"\",3,4,2,\"\",5,6,\"\"],\n              [\"\",5,4,6,\"\",3,\"\",\"\",\"\"],\n              [6,8,\"\",9,1,5,\"\",4,\"\"],\n              [4,\"\",\"\",\"\",3,\"\",6,\"\",\"\"],\n              [\"\",\"\",2,5,9,\"\",\"\",\"\",\"\"],\n              [\"\",\"\",8,\"\",6,4,\"\",\"\",9]];*/\n  const [isInput, setIsInput] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  if (!isInput) {\n    return (\n      <View style={styles.container}>\n        <TextInput\n          style={styles.input}\n          onChangeText = {(text) => {\n            setUserName(text);\n          }}\n          placeholder=\"Please enter your name\"\n        />\n        <Button color=\"blue\" \n          title=\"submit\" \n          onPress={() => {\n            setIsInput(true);\n          }}>\n        </Button>\n      </View>\n\n    );\n  } else {\n    return (\n      <View style={styles.container}>\n        <Grid vals={vals} userName={userName}/>\n      </View>\n    );\n  }\n\n}\n\n\nexport default EasyModeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n});\n\n\n"]},"metadata":{},"sourceType":"module"}