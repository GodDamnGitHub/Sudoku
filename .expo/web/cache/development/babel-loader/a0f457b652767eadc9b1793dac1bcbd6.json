{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/HighScoresScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef, createRef, setState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar Item = function Item(_ref) {\n  var name = _ref.name,\n      time = _ref.time;\n  return React.createElement(View, {\n    style: styles.item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 32\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, name));\n};\n\nfunction HighScoresScreen() {\n  var _this2 = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(Item, {\n      name: item.userName,\n      time: item.timeText,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var getData = function getData() {\n    var jsonValue, _data;\n\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@sudoku_scores'));\n\n          case 3:\n            jsonValue = _context.sent;\n            _data = null;\n\n            if (jsonValue != null) {\n              _data = JSON.parse(jsonValue);\n              setData(_data);\n              alert(jsonValue);\n              console.log('just set Info, Correct and Answered');\n            } else {\n              console.log('just read a null value from Storage');\n            }\n\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error in getData \");\n            console.dir(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var clearAll = function clearAll() {\n    return _regeneratorRuntime.async(function clearAll$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.dir(_context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  useEffect(function () {\n    clearAll();\n    getData();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default HighScoresScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/HighScoresScreen.js"],"names":["React","useState","useEffect","useRef","createRef","setState","NavigationContainer","createNativeStackNavigator","AsyncStorage","Item","name","time","styles","item","fontSize","HighScoresScreen","data","setData","renderItem","userName","timeText","getData","getItem","jsonValue","JSON","parse","alert","console","log","dir","clearAll","clear","container","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, createRef, setState } from \"react\"\nimport { Button, View, Text, StyleSheet, ImageBackground, Image, FlatList } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\n\nconst Item = ({ name, time }) => (\n  <View style={styles.item}>\n    <Text style={{fontSize:32}}>{name}</Text>\n  </View>\n);\n\n\nfunction HighScoresScreen() {\n\n  const [data, setData] = useState(\"\");\n\n\n  const renderItem = ({ item }) => (\n    <Item name={item.userName} time={item.timeText} />\n  );\n\n  const getData = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem('@sudoku_scores');\n      let data = null\n      if (jsonValue!=null) {\n        data = JSON.parse(jsonValue);\n        setData(data);\n        alert(jsonValue);\n        console.log('just set Info, Correct and Answered')\n      } else {\n        console.log('just read a null value from Storage')\n      }\n    } catch(e) {\n      console.log(\"error in getData \")\n      console.dir(e)\n      // error reading value\n    }\n  }\n\n  const clearAll = async () => {\n    try {\n      await AsyncStorage.clear();\n    } catch(e) {\n      console.dir(e);\n    }\n  }\n\n  useEffect(() => {\n    clearAll();\n    getData()\n  },[])\n\n  return (\n\n    \n    <View style={styles.container}>\n      <FlatList\n        data={data}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n}\n\nexport default HighScoresScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n});\n\n\n"]},"metadata":{},"sourceType":"module"}