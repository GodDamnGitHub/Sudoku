{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/CloudRegistration.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Axios from 'axios';\nimport appKey, { appURL } from \"../lib/appKey.js\";\nimport axios from \"axios\";\n\nvar CloudRegistration = function CloudRegistration() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userKey = _useState2[0],\n      setUserKey = _useState2[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var storeData = function storeData(key, value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, jsonValue));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.dir(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var getData = function getData() {\n    var jsonValue, data, result;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@userKey'));\n\n          case 3:\n            jsonValue = _context2.sent;\n            console.log('jsonValue = ' + jsonValue);\n            console.log('appKey = ' + appKey);\n            data = null;\n\n            if (!(jsonValue != null)) {\n              _context2.next = 12;\n              break;\n            }\n\n            data = JSON.parse(jsonValue);\n            setUserKey(data.userKey);\n            _context2.next = 21;\n            break;\n\n          case 12:\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(Axios.post(appURL + '/getNewUserKey', {\n              appKey: appKey\n            }));\n\n          case 14:\n            result = _context2.sent;\n            console.log(\"result=\" + result);\n            console.dir(result);\n            setUserKey(result.data.userKey);\n            _context2.next = 20;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, JSON.stringify(result.data)));\n\n          case 20:\n            alert(result.data.userKey);\n\n          case 21:\n            _context2.next = 26;\n            break;\n\n          case 23:\n            _context2.prev = 23;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.dir(_context2.t0);\n\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 23]], Promise);\n  };\n\n  var clearAll = function clearAll() {\n    return _regeneratorRuntime.async(function clearAll$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n          case 3:\n            _context3.next = 8;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.dir(_context3.t0);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var registrationComponent = React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 31\n    }\n  }, \"initializing userKey:\", userKey);\n\n  if (userKey) {\n    registrationComponent = React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        flex: 1,\n        justifyContent: 'space-around'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"UserKey = \", userKey, \" \"), React.createElement(Button, {\n      title: \"clear user key (Dangerous only for debugging)\",\n      color: \"red\",\n      onPress: function onPress() {\n        clearAll();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return registrationComponent;\n};\n\nexport default CloudRegistration;\n\nvar remove = function remove(item) {\n  var _useValue, currentValue, result;\n\n  return _regeneratorRuntime.async(function remove$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _useValue = useValue(), currentValue = _useValue.currentValue;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(currentValue, appURL + '/deletePost', {\n            email: currentValue.email,\n            secret: currentValue.secret,\n            postid: item._id\n          }));\n\n        case 3:\n          result = _context4.sent;\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/CloudRegistration.js"],"names":["React","useState","useEffect","AsyncStorage","Axios","appKey","appURL","axios","CloudRegistration","userKey","setUserKey","getData","storeData","key","value","jsonValue","JSON","stringify","setItem","console","dir","getItem","log","data","parse","post","result","alert","clearAll","clear","registrationComponent","flexDirection","flex","justifyContent","remove","item","useValue","currentValue","email","secret","postid","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, StyleSheet, Text, TextInput, View } from \"react-native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Axios from 'axios'\nimport appKey,{appURL} from '../lib/appKey.js'\nimport axios from \"axios\";\n\n\nconst CloudRegistration = () => {\n  const [userKey,setUserKey] = useState(null)\n\n\n  useEffect(() => {\n              //clearAll()\n              getData()}\n           ,[])\n\n  const storeData = async (key,value) => {\n      try {\n        const jsonValue = JSON.stringify(value)\n        await AsyncStorage.setItem(key, jsonValue)\n      } catch (e) {\n        console.dir(e)\n      }\n  }\n\n  const getData = async () => {\n      try {\n        let jsonValue = await AsyncStorage.getItem('@userKey')\n        //jsonValue=null\n        console.log('jsonValue = '+jsonValue)\n        console.log('appKey = '+appKey)\n\n        let data = null\n        if (jsonValue!=null) {\n\n          data = JSON.parse(jsonValue)\n          setUserKey(data.userKey)\n        } else {\n          let result =\n            await Axios.post(appURL+'/getNewUserKey',{appKey:appKey})\n          console.log(`result=${result}`)\n          console.dir(result)\n          setUserKey(result.data.userKey)\n\n          await AsyncStorage.setItem(key, JSON.stringify(result.data))\n          alert(result.data.userKey)\n        }\n      } catch(e) {\n        console.dir(e)\n      }\n }\n\n const clearAll = async () => {\n      try {\n        await AsyncStorage.clear()\n      } catch(e) {\n        console.dir(e)\n      }\n }\n\n  let registrationComponent = <Text>initializing userKey:{userKey}</Text>\n  if (userKey){\n    registrationComponent = (\n      <View>\n        <View style={{flexDirection:'row',flex:1,justifyContent:'space-around'}}>\n          <Text>UserKey = {userKey} </Text>\n          <Button title=\"clear user key (Dangerous only for debugging)\"\n            color='red'\n            onPress = {() => {clearAll()}} />\n        </View>\n      </View>\n    )\n  }\n\n  return (\n    registrationComponent\n  )\n\n}\n\n\n\n\nexport default CloudRegistration\n\n\n\nconst remove = async(item) => {\n  const {currentValue} = useValue();\n  const result = await axios.post(currentValue, appURL+'/deletePost', \n    {email:currentValue.email, secret:currentValue.secret, postid:item._id})\n}"]},"metadata":{},"sourceType":"module"}