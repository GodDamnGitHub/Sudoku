{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/HighScoresScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef, createRef, setState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Axios from 'axios';\nvar url = \"localhost:3000\";\n\nvar Item = function Item(_ref) {\n  var name = _ref.name,\n      time = _ref.time;\n  return React.createElement(View, {\n    style: styles.item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 32\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, name, \"    \", age));\n};\n\nfunction HighScoresScreen() {\n  var _this2 = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(Item, {\n      name: item.name,\n      age: item.age,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var getData = function getData() {\n    var jsonValue, _data;\n\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            alert(\"start\");\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Axios.get('127.0.0.1:3000/scores'));\n\n          case 4:\n            jsonValue = _context.sent;\n            alert(jsonValue);\n            _data = null;\n\n            if (jsonValue != null) {\n              _data = JSON.parse(jsonValue);\n              setData(_data);\n              console.log('just set Info, Correct and Answered');\n            } else {\n              console.log('just read a null value from Storage');\n            }\n\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error in getData \");\n            console.dir(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default HighScoresScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    backgroundColor: 'grey',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  }\n});","map":{"version":3,"sources":["/Users/felix/Library/Mobile Documents/com~apple~CloudDocs/Learning/Brandeis/CS153A/Projects/Sudoku/Components/HighScoresScreen.js"],"names":["React","useState","useEffect","useRef","createRef","setState","NavigationContainer","createNativeStackNavigator","AsyncStorage","Axios","url","Item","name","time","styles","item","fontSize","age","HighScoresScreen","data","setData","renderItem","getData","alert","get","jsonValue","JSON","parse","console","log","dir","container","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","padding","marginVertical","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, createRef, setState } from \"react\"\nimport { Button, View, Text, StyleSheet, ImageBackground, Image, FlatList } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport Axios from 'axios'\n\n\n\nlet url = \"localhost:3000\";\n\nconst Item = ({ name, time }) => (\n  <View style={styles.item}>\n    <Text style={{fontSize:32}}>{name}    {age}</Text>\n  </View>\n);\n\n\nfunction HighScoresScreen() {\n\n  const [data, setData] = useState(\"\");\n\n\n  const renderItem = ({ item }) => (\n    <Item name={item.name} age={item.age} />\n  );\n\n  const getData = async () => {\n    try {\n      alert(\"start\");\n      let jsonValue = await Axios.get('127.0.0.1:3000/scores');\n      alert(jsonValue);\n      let data = null\n      if (jsonValue!=null) {\n        data = JSON.parse(jsonValue);\n        setData(data);\n        //alert(jsonValue);\n        console.log('just set Info, Correct and Answered')\n      } else {\n        console.log('just read a null value from Storage')\n      }\n    } catch(e) {\n      console.log(\"error in getData \")\n      console.dir(e)\n      // error reading value\n    }\n  }\n\n\n  useEffect(() => {\n    //clearAll();\n    getData()\n  },[])\n\n  \n  return (\n\n    \n    <View style={styles.container}>\n      <FlatList\n        data={data}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n}\n\nexport default HighScoresScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    backgroundColor: 'grey',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  }\n});\n\n\n"]},"metadata":{},"sourceType":"module"}